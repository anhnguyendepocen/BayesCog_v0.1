y_bar_140 <- as.numeric(predict(L, data.frame(weight=40)))
g3 <- g2 + geom_segment(aes(x = 40, y = y_range[1], xend = 40, yend = y_bar_140), colour = "green")
g3
y_range
g3 <- g2 + geom_segment(aes(x = 40, y = y_range[1], xend = 40, yend = y_bar_140), colour = "forestgreen", size = 2, alpha=0.8)
g3
g3 <- g2 + geom_segment(aes(x = 40, y = y_range[1], xend = 40, yend = y_bar_140), colour = "gold2", size = 2, alpha=0.8)
g3 <- g3 + geom_segment(aes(x = x_range[1], y = y_bar_140, xend = 40, yend = y_bar_140), colour = "gold2", size = 2, alpha=0.8)
g3
g3 <- g2 + geom_segment(aes(x = 40, y = y_range[1], xend = 40, yend = y_bar_140), colour = "navyblue", size = 2, alpha=0.8)
g3 <- g3 + geom_segment(aes(x = x_range[1], y = y_bar_140, xend = 40, yend = y_bar_140), colour = "navyblue", size = 2, alpha=0.8)
g3
ggsave(plot = g3, "_plots/regressionling_lm_prediction.png", width = 6, height = 4, type = "cairo-png", units = "in")
rstan:::rstudio_stanc("_scripts/regression_height_ppc_model.stan")
source('E:/teaching/BayesCog/regression_height/_scripts/regression_height_ppc_main.R')
rm(list=ls(all=TRUE))
library(rstan)
library(ggplot2)
load('_data/height.RData')
d <- Howell1
d <- d[ d$age >= 18 , ]
# =============================================================================
#### Running Stan ####
# =============================================================================
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
N <- length(d$height)
dataList <- list(N=N, height=d$height, weight=d$weight)
modelFile <- '_scripts/regression_height_ppc_model.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_reg_ppc <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
height_bar <- extract(fit_reg_ppc, pars = 'height_bar', permuted = TRUE)
dim(height_bar)
height_bar <- extract(fit_reg_ppc, pars = 'height_bar', permuted = TRUE)$height_bar
dim(height_bar)
length(d$weight)
class(height_bar)
source('_scripts/HDIofMCMC.R')
M <- matrix(1:6, nrow=3, byrow=TRUE)
apply(M, 1, function(x) 2*x[1]+x[2])
apply(M, 2, function(x) 2*x[1]+x[2])
HDIofMCMC(height_bar[,1])
HDIofMCMC(height_bar[,2])
t = apply(height_bar, 2, HDIofMCMC)
t[1,]
HDIofMCMC(height_bar[,1])
HDIofMCMC(height_bar[,2])
HDIofMCMC(height_bar[,52])
t[,1]
t[,2]
t[,52]
stan_plot(fit_reg_ppc, pars = 'height_bar', show_density = T)
stan_plot(fit_reg_ppc, pars = 'height_bar[1]', show_density = T)
stan_plot(fit_reg_ppc, pars = 'height_bar[1]', show_density = T, colour='skyblue')
stan_plot(fit_reg_ppc, pars = 'height_bar[1]', show_density = T, color='skyblue')
stan_plot(fit_reg_ppc, pars = 'height_bar[1]', show_density = T, fill_color='skyblue')
plot_dens_height_bar1 <- stan_plot(fit_reg_ppc, pars = 'height_bar[1]', show_density = T, fill_color='skyblue')
ggsave(plot = plot_dens_height_bar1, "_plots/dens_height_bar1.png", width = 6, height = 4, type = "cairo-png", units = "in")
t[,1]
height_bar <- extract(fit_reg_ppc, pars = 'height_bar', permuted = FALSE)$height_bar
x = colMeans(height_bar)
plot(1:152~x)
plot(1:152,x)
plot(1:352,x)
length(d$weight)
range(d$weight)
plot(d$weight,x)
mean(height_bar[,1])
mean(height_bar[1])
mean(height_bar[2])
mean(height_bar[1,])
mean(height_bar[2,])
mean(height_bar[90,])
dim(height_bar)
mean(height_bar[,1])
mean(height_bar[,2])
mean(height_bar[,3])
mean(height_bar[,4])
mean(height_bar[,5])
mean(height_bar[,50])
mean(height_bar[,300])
mean(height_bar[,352])
cbind(d$weight,x)
plot_dens_height_bar1
cbind(d$weight,x)[1,]
plot_dens_height_bar1 <- plot_dens_height_bar1 + labs(x = 'dens(height_bar | x = 47.8)')
plot_dens_height_bar1
plot_dens_height_bar1 <- plot_dens_height_bar1 + labs(y = 'dens(height_bar | x = 47.8)')
plot_dens_height_bar1
plot_dens_height_bar1 <- stan_plot(fit_reg_ppc, pars = 'height_bar[1]', show_density = T, fill_color='skyblue')
plot_dens_height_bar1 <- plot_dens_height_bar1 + ylab("'dens(height_bar | x = 47.8)")
plot_dens_height_bar1
class(plot_dens_height_bar1)
plot_dens_height_bar1 <- stan_plot(fit_reg_ppc, pars = 'height_bar[1]', show_density = T, fill_color='skyblue')
plot_dens_height_bar1 <- plot_dens_height_bar1 + ylab("dens(height_bar | x = 47.8)")
plot_dens_height_bar1
plot_dens_height_bar1$labels
plot_dens_height_bar1$data
plot_dens_height_bar1$layers
plot_dens_height_bar1$scales
plot_dens_height_bar1$mapping
plot_dens_height_bar1$theme
plot_dens_height_bar1 <- stan_plot(fit_reg_ppc, pars = 'height_bar[1]', show_density = T, fill_color='skyblue')
plot_dens_height_bar1 <- plot_dens_height_bar1 + ylab("dens(height_bar | x = 47.8)")
ggsave(plot = plot_dens_height_bar1, "_plots/dens_height_bar1.png", width = 6, height = 4, type = "cairo-png", units = "in")
get_posterior_mean(fit_reg_ppc, c('alpha','beta'))[,5]
g1 <- ggplot(d, aes(weight,height))
g1 <- g1 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
g1 <- g1 + myconfig + labs(x = 'weight', y = 'height')
print(g1)
# add the regression line
parm <- get_posterior_mean(fit_reg_ppc, c('alpha','beta'))[,5]
g2 <- g1 + geom_abline(intercept = parm[1], slope = parm[2],
color = "red", size = 2, alpha=0.8)
print(g2)
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
g1 <- ggplot(d, aes(weight,height))
g1 <- g1 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
g1 <- g1 + myconfig + labs(x = 'weight', y = 'height')
print(g1)
# add the regression line
parm <- get_posterior_mean(fit_reg_ppc, c('alpha','beta'))[,5]
g2 <- g1 + geom_abline(intercept = parm[1], slope = parm[2],
color = "red", size = 2, alpha=0.8)
print(g2)
height_HDI <- apply(height_bar, 2, HDIofMCMC) # 2nd dimension
d$lower <- height_HDI[1,]
d$upper <- height_HDI[2,]
View(d)
d$lower <- height_HDI[1,]
d$upper <- height_HDI[2,]
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
g1 <- ggplot(d, aes(weight,height))
g1 <- g1 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
g1 <- g1 + myconfig + labs(x = 'weight', y = 'height')
print(g1)
parm <- get_posterior_mean(fit_reg_ppc, c('alpha','beta'))[,5]
g2 <- g1 + geom_abline(intercept = parm[1], slope = parm[2],
color = "red", size = 2, alpha=0.8)
print(g2)
g3 <- g2 + geom_ribbon(dataaes(ymin=lower, ymax=upper), linetype=2, alpha=0.1)
g3 <- g2 + geom_ribbon(aes(ymin=lower, ymax=upper), linetype=2, alpha=0.1)
g3
g3 <- g2 + geom_ribbon(aes(ymin=lower, ymax=upper), linetype=2, alpha=0.5)
g3
g3 <- g2 + geom_ribbon(aes(ymin=lower, ymax=upper), linetype=2, alpha=0.2)
g3
ggsave(plot = g3, "_plots/regressionling_lm_pc.png", width = 6, height = 4, type = "cairo-png", units = "in")
pairs(fit_reg_ppc, pars = c('alpha','beta'))
rm(list=ls(all=TRUE))
library(rstan)
library(ggplot2)
source('_scripts/HDIofMCMC.R')
load('_data/height.RData')
d <- Howell1
load('_data/height.RData')
d <- Howell1
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
g1 <- ggplot(d, aes(weight,height))
g1 <- g1 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
g1 <- g1 + myconfig + labs(x = 'weight', y = 'height')
print(g1)
ggsave(plot = g1, "_plots/scatter.png", width = 6, height = 4, type = "cairo-png", units = "in")
getwd()
library(rstan)
library(ggplot2)
load('_data/height.RData')
d <- Howell1
d <- d[ d$age >= 18 , ]
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
g1 <- ggplot(d, aes(weight,height))
g1
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
N <- length(d$height)
dataList <- list(N=N, height=d$height, weight=d$weight)
modelFile <- '_scripts/regression_height_ppc_model.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_reg_ppc <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
load('_data/height.RData')
d <- Howell1
d <- d[ d$age >= 18 , ]
g0 <- ggplot(d, aes(weight,height)) + myconfig + ylim(130, 180)
g0
ggsave(plot = g0, "_plots/layer0.png", width = 5, height = 3, type = "cairo-png", units = "in")
g1 <- g0 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
print(g1)
parm <- get_posterior_mean(fit_reg_ppc, c('alpha','beta'))[,5]
g2 <- g1 + geom_abline(intercept = parm[1], slope = parm[2],
color = "red", size = 2, alpha=0.8)
print(g2)
g3 <- g2 + geom_ribbon(aes(ymin=lower, ymax=upper), linetype=2, alpha=0.2)
print(g3)
height_bar <- extract(fit_reg_ppc, pars = 'height_bar', permuted = TRUE)$height_bar
dim(height_bar) # 4000-by-352
length(d$weight)
height_HDI <- apply(height_bar, 2, HDIofMCMC) # 2nd dimension
# construct intervals into df
d$lower <- height_HDI[1,]
d$upper <- height_HDI[2,]
source('_scripts/HDIofMCMC.R')
height_bar <- extract(fit_reg_ppc, pars = 'height_bar', permuted = TRUE)$height_bar
dim(height_bar) # 4000-by-352
length(d$weight)
height_HDI <- apply(height_bar, 2, HDIofMCMC) # 2nd dimension
# construct intervals into df
d$lower <- height_HDI[1,]
d$upper <- height_HDI[2,]
g3 <- g2 + geom_ribbon(aes(ymin=lower, ymax=upper), linetype=2, alpha=0.2)
print(g3)
g0 <- ggplot(d, aes(weight,height)) + myconfig + ylim(130, 180)
ggsave(plot = g0, "_plots/layer0.png", width = 5, height = 3, type = "cairo-png", units = "in")
# scatter plot
g1 <- g0 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
ggsave(plot = g1, "_plots/layer1.png", width = 5, height = 3, type = "cairo-png", units = "in")
# regression line
parm <- get_posterior_mean(fit_reg_ppc, c('alpha','beta'))[,5]
g2 <- g1 + geom_abline(intercept = parm[1], slope = parm[2],
color = "red", size = 2, alpha=0.8)
ggsave(plot = g2, "_plots/layer2.png", width = 5, height = 3, type = "cairo-png", units = "in")
# plot shaded error bar
g3 <- g2 + geom_ribbon(aes(ymin=lower, ymax=upper), linetype=2, alpha=0.2)
print(g3)
ggsave(plot = g3, "_plots/layer3.png", width = 5, height = 3, type = "cairo-png", units = "in")
g0 <- ggplot(d, aes(weight,height)) + myconfig + ylim(130, 180)
ggsave(plot = g0, "_plots/layer0.png", width = 4, height = 3, type = "cairo-png", units = "in")
# scatter plot
g1 <- g0 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
ggsave(plot = g1, "_plots/layer1.png", width = 4, height = 3, type = "cairo-png", units = "in")
# regression line
parm <- get_posterior_mean(fit_reg_ppc, c('alpha','beta'))[,5]
g2 <- g1 + geom_abline(intercept = parm[1], slope = parm[2],
color = "red", size = 2, alpha=0.8)
ggsave(plot = g2, "_plots/layer2.png", width = 4, height = 3, type = "cairo-png", units = "in")
# plot shaded error bar
g3 <- g2 + geom_ribbon(aes(ymin=lower, ymax=upper), linetype=2, alpha=0.2)
ggsave(plot = g3, "_plots/layer3.png", width = 4, height = 3, type = "cairo-png", units = "in")
rm(list=ls(all=TRUE))
library(rstan)
library(ggplot2)
load('_data/height.RData')
d <- Howell1
d <- d[ d$age >= 18 , ]
L <- lm( height ~ weight, d) # estimate model by minimizing least squares errors
summary(L)
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
# scatter plot
g1 <- ggplot(d, aes(weight,height))
g1 <- g1 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
g1 <- g1 + myconfig + labs(x = 'weight', y = 'height')
print(g1)
print(g1)
g2 <- g1 + geom_abline(intercept = L$coefficients[[1]], slope = L$coefficients[[2]],
color = "red", size = 2, alpha=0.8)
print(g2)
x_range <- ggplot_build(g2)$panel$ranges[[1]]$x.range
y_range <- ggplot_build(g2)$panel$ranges[[1]]$y.range
y_bar_140 <- as.numeric(predict(L, data.frame(weight=40)))
g3 <- g2 + geom_segment(aes(x = 40, y = y_range[1], xend = 40, yend = y_bar_140), colour = "navyblue", size = 2, alpha=0.8)
g3 <- g3 + geom_segment(aes(x = x_range[1], y = y_bar_140, xend = 40, yend = y_bar_140), colour = "navyblue", size = 2, alpha=0.8)
print(g3)
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
N <- length(d$height)
dataList <- list(N=N, height=d$height, weight=d$weight)
modelFile <- '_scripts/regression_height_model.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
rstan:::rstudio_stanc("_scripts/regression_height_model.stan")
rstan:::rstudio_stanc("_scripts/regression_height_ppc_model.stan")
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_reg <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
print(fit_reg)
rm(list=ls(all=TRUE))
library(rstan)
library(ggplot2)
source('_scripts/HDIofMCMC.R')
load('_data/height.RData')
d <- Howell1
d <- d[ d$age >= 18 , ]
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
N <- length(d$height)
dataList <- list(N=N, height=d$height, weight=d$weight)
modelFile <- '_scripts/regression_height_ppc_model.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
rstan:::rstudio_stanc("_scripts/regression_height_ppc_model.stan")
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_reg_ppc <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
height_bar <- extract(fit_reg_ppc, pars = 'height_bar', permuted = TRUE)$height_bar
dim(height_bar) # 4000-by-352
length(d$weight)
height_HDI <- apply(height_bar, 2, HDIofMCMC) # 2nd dimension
# construct intervals into df
d$lower <- height_HDI[1,]
d$upper <- height_HDI[2,]
# =============================================================================
#### make plots ####
# =============================================================================
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
# density of a generated value
plot_dens_height_bar1 <- stan_plot(fit_reg_ppc, pars = 'height_bar[1]', show_density = T, fill_color='skyblue')
plot_dens_height_bar1 <- plot_dens_height_bar1 + ylab("dens(height_bar | x = 47.8)")
plot_dens_height_bar1
g1 <- ggplot(d, aes(weight,height))
g1 <- g1 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
g1 <- g1 + myconfig + labs(x = 'weight', y = 'height')
print(g1)
# add the regression line
parm <- get_posterior_mean(fit_reg_ppc, c('alpha','beta'))[,5]
g2 <- g1 + geom_abline(intercept = parm[1], slope = parm[2],
color = "red", size = 2, alpha=0.8)
print(g2)
# plot shaded error bar
g3 <- g2 + geom_ribbon(aes(ymin=lower, ymax=upper), linetype=2, alpha=0.2)
print(g3)
rm(list=ls(all=TRUE))
library(rstan)
library(ggplot2)
load('_data/height.RData')
d <- Howell1
d <- d[ d$age >= 18 , ]
L <- lm( height ~ weight, d) # estimate model by minimizing least squares errors
summary(L)
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
# scatter plot
g1 <- ggplot(d, aes(weight,height))
g1 <- g1 + geom_jitter(width=0.25, height=0.25, size=3, colour='skyblue', alpha=0.9)
g1 <- g1 + myconfig + labs(x = 'weight', y = 'height')
print(g1)
# add the regression line
g2 <- g1 + geom_abline(intercept = L$coefficients[[1]], slope = L$coefficients[[2]],
color = "red", size = 2, alpha=0.8)
print(g2)
# =============================================================================
#### Running Stan ####
# =============================================================================
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
N <- length(d$height)
dataList <- list(N=N, height=d$height, weight=d$weight)
modelFile <- '_scripts/regression_height_model.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_reg <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
print(fit_reg)
print(fit_reg)
summary(L)
print(fit_reg)
summary(L)
stan_plot(fit_reg, pars = 'beta', show_density=T)
?seq
x = seq(-20, 10, by = 0.1)
y = dnorm(x, mean = 0, sd = 10)
plot(x,y)
x = seq(-20, 20, by = 0.1)
y = dnorm(x, mean = 0, sd = 10)
plot(x,y)
x = seq(-5, 5, by = 0.1)
y = dnorm(x, mean = 0, sd = 1)
plot(x,y)
y0 = dnorm(x, mean = 0, sd = 1)
y1 = qnorm(y0)
plot(x, y0)
plot(x, y1)
plot(y0, y1)
x2 = rnorm(10)
x2 = rnorm(20)
y2 = qnorm(x2)
x2
qnorm(x2)
?dnorm
hist(x2)
x2 = rnorm(100)
hist(x2)
qnorm(x2)
x2
y2 = pnorm(x2)
hist(x2, y2)
length(x2)
length(y2)
hist(x2, y2)
?hist
hist(y2)
x2 = rnorm(1000)
y2 = pnorm(x2)
hist(y2)
m = seq(-5,5,by = 0.1)
n = dnorm(m)
plot(m)
plot(n)
hist()n
hist(n)
o = pnorm(n)
plot(o)
hist(o)
hist(x2)
hist(y2)
y3 = exp(x2)
hist(y3)
hist(x2)
hist(y3)
x3= rnorm(1000, mean = 0, sd = 10)
y3 = exp(x3)
hist(y3)
hist(x3)
hist(y3)
x3= rnorm(1000, mean = 0, sd = 1)
x3= rnorm(1000, mean = 0, sd = .5)
y3 = exp(x3)
hist(y3)
x3= rnorm(1000, mean = 0, sd = 1)
y3 = exp(x3)
y3 = exp(x3)
hist(y3)
