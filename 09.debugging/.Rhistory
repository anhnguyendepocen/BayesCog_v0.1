library(rstan)
lookup(dnorm)
lookup(rnorm)
lookup(mean)
lookup(exp)
q()
t     <- c(1, 2, 4, 7, 12, 21, 35, 59, 99)
nt    <- length(t)
slist <- 1:3
ns    <- length(slist)
k <- matrix(c(18, 18, 16, 13, 9, 6, 4, 4, 4,
17, 13,  9,  6, 4, 4, 4, 4, 4,
14, 10,  6,  4, 4, 4, 4, 4, 4), nrow=ns, ncol=nt, byrow=T)
n <- 18
dataList  <- list(k = k,      # items remmebered
n = n,      # total number of items
t = t,      # time intervals
ns = ns,    # number of subjects
nt = nt)    # number of trials
nt
rstan:::rstudio_stanc("_scripts/exp_decay_model.stan")
rstan:::rstudio_stanc("_scripts/exp_decay_model.stan")
dataList  <- list(k         = k,          # items remmebered
nItem     = nItem,      # total number of items
intervals = intervals,  # time intervals
ns        = ns,         # number of subjects
nt        = nt)         # number of trials
# =============================================================================
#### Running Stan ####
# =============================================================================
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
#### model1 #### --------------------------------------------
modelFile <- '_scripts/exp_decay_model.stan'
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_coin1 <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
dataList
intervals <- c(1, 2, 4, 7, 12, 21, 35, 59, 99)
nt        <- length(intervals)
ns        <- 3
nItem     <- 18
k <- matrix(c(18, 18, 16, 13, 9, 6, 4, 4, 4,
17, 13,  9,  6, 4, 4, 4, 4, 4,
14, 10,  6,  4, 4, 4, 4, 4, 4), nrow=ns, ncol=nt, byrow=T)
dataList  <- list(k         = k,          # items remmebered
nItem     = nItem,      # total number of items
intervals = intervals,  # time intervals
ns        = ns,         # number of subjects
nt        = nt)         # number of trials
dataList
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_coin1 <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
rm(list=ls(all=TRUE))
intervals <- c(1, 2, 4, 7, 12, 21, 35, 59, 99)
nt        <- length(intervals)
ns        <- 3
nItem     <- 18
k <- matrix(c(18, 18, 16, 13, 9, 6, 4, 4, 4,
17, 13,  9,  6, 4, 4, 4, 4, 4,
14, 10,  6,  4, 4, 4, 4, 4, 4), nrow=ns, ncol=nt, byrow=T)
dataList  <- list(k         = k,          # items remmebered
nItem     = nItem,      # total number of items
intervals = intervals,  # time intervals
ns        = ns,         # number of subjects
nt        = nt)         # number of trials
# =============================================================================
#### Running Stan ####
# =============================================================================
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
modelFile <- '_scripts/exp_decay_model.stan'
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_coin1 <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_mem <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random")#,
#seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
rstan:::rstudio_stanc("_scripts/exp_decay_model.stan")
rstan:::rstudio_stanc("_scripts/exp_decay_model.stan")
rstan:::rstudio_stanc("_scripts/exp_decay_model.stan")
modelFile <- '_scripts/exp_decay_model.stan'
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_mem <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random")#,
#seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_mem <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random")#,
#seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
rstan:::rstudio_stanc("_scripts/exp_decay_model2.stan")
rstan:::rstudio_stanc("_scripts/exp_decay_model2.stan")
modelFile <- '_scripts/exp_decay_model2.stan'
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_mem <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random")#,
#seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
modelFile <- '_scripts/exp_decay_model2.stan'
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_mem <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random")#,
#seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
pairs(fit_mem, pars = c('alpha[1]', 'beta[1]'))
pairs(fit_mem, pars = c('alpha[2]', 'beta[2]'))
pairs(fit_mem, pars = c('alpha[3]', 'beta[3]'))
pairs(fit_mem, pars = c('alpha[4]', 'beta[4]'))
rstan:::rstudio_stanc("_scripts/exp_decay_model.stan")
rstan:::rstudio_stanc("_scripts/exp_decay_model_master.stan")
rm(list=ls(all=TRUE))
intervals <- c(1, 2, 4, 7, 12, 21, 35, 59, 99)
nt        <- length(intervals)
ns        <- 3
nItem     <- 18
k <- matrix(c(18, 18, 16, 13, 9, 6, 4, 4, 4,
17, 13,  9,  6, 4, 4, 4, 4, 4,
14, 10,  6,  4, 4, 4, 4, 4, 4), nrow=ns, ncol=nt, byrow=T)
dataList  <- list(k         = k,          # items remmebered
nItem     = nItem,      # total number of items
intervals = intervals,  # time intervals
ns        = ns,         # number of subjects
nt        = nt)         # number of trials
# =============================================================================
#### Running Stan ####
# =============================================================================
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
modelFile <- '_scripts/exp_decay_model_master.stan'
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_mem <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random")#,
#seed    = 1450154626)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
rstan:::rstudio_stanc("_scripts/exp_decay_model_master.stan")
rstan:::rstudio_stanc("_scripts/exp_decay_model.stan")
